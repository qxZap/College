\relax 
\select@language{romanian}
\@writefile{toc}{\select@language{romanian}}
\@writefile{lof}{\select@language{romanian}}
\@writefile{lot}{\select@language{romanian}}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introducere}{2}}
\@writefile{toc}{\contentsline {paragraph}{ SSH = Secure Socket Shell\\ Protocoalele SSH1 \IeC {\textcommabelow s}i SSH-1 au fost developate in 1995 de c\IeC {\u a}tre Tatu Yl\IeC {\"o}nen, un cercet\IeC {\u a}tor de la universitatea de tehnologie in Helsinki, Finlanda.\\ Modelul s\IeC {\u a}u SSH-1 a \IeC {\^\i }nceput s\IeC {\u a} capete din ce in ce mai mult\IeC {\u a} aten\IeC {\textcommabelow t}ie. Cu timpul \IeC {\textcommabelow s}i-a dat seama c\IeC {\u a} produsul s\IeC {\u a}u poate fi utilizat \IeC {\^\i }n multe moduri.\\ In Iulie 1995, SSH-1 a fost disponibil ca software gratuit cu tot cu cod surs\IeC {\u a}, ca s\IeC {\u a} poate fi copiat \IeC {\textcommabelow s}i utilizat de oricine \IeC {\textcommabelow s}i-ar fi dorit.\\ P\IeC {\^a}n\IeC {\u a} la finalul anului 20.000 de utilizatori din 50 de \IeC {\textcommabelow t}\IeC {\u a}ri diferite au adoptat SSH-1. Yl\IeC {\"o}nen primea c\IeC {\^a}te 150 de mesaje pe e-mail de la utilizatori cer\IeC {\^a}nd suport. \\ Cu timpul a fost \IeC {\^\i }nbun\IeC {\u a}t\IeC {\u a}\IeC {\textcommabelow t}it. \IeC {\^I}n acest proiect sunt implementate acelea\IeC {\textcommabelow s}i idei pe care le-a avut si Yl\IeC {\"o}nen. Scopul este realizarea comunic\IeC {\u a}rii mai multor utilizatori cu un server. \\ Exemplu: PuTTY\\ Con\IeC {\textcommabelow t}inutul lucrarii prezint\IeC {\u a} schimbul de informa\IeC {\textcommabelow t}ii criptate \IeC {\^\i }ntre server \IeC {\textcommabelow s}i utilizatori. }{2}}
\@writefile{toc}{\contentsline {paragraph}{ Acest proiect func\IeC {\textcommabelow t}ioneaz\IeC {\u a} pe baza protocolului TCP/IP prin care un utilizator se conecteaz\IeC {\u a} ini\IeC {\textcommabelow t}ial la un server cu creden\IeC {\textcommabelow t}ialele sale de mySSH, av\IeC {\^a}nd ulterior posibilitatea de a face uz de comenzile pe care le are la dispozi\IeC {\textcommabelow t}ie (date de server). }{2}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Despre mySSH}{2}}
\@writefile{toc}{\contentsline {paragraph}{ Modelul implementat \IeC {\^\i }n acest proiect are ca scop interpretarea comenzilor de c\IeC {\u a}tre server \IeC {\textcommabelow s}i execu\IeC {\textcommabelow t}ia comenzilor cerute de c\IeC {\u a}tre utilizatori. Utilizatorii sunt identifica\IeC {\textcommabelow t}i printr-un fi\IeC {\textcommabelow s}ier cu con\IeC {\textcommabelow t}inut criptat. Utilizatorii pot trimite comenzi c\IeC {\u a}tre server iar acesta va trimite \IeC {\^\i }napoi execu\IeC {\textcommabelow t}ia. }{2}}
\@writefile{toc}{\contentsline {paragraph}{ Cerin\IeC {\textcommabelow t}\IeC {\u a}: Sa se implementeze o pereche client/server capabila de autentificare si comunicare encriptate. Server-ul va executa comenzile de la client, si va returna output-ul lor clientului. Comenzile sunt executabile din path, cu oricat de multe argumente; cd si pwd vor functiona normal. Se pot executa comenzi multiple legate intre ele sau redirectate prin: \textbar . \textgreater , \textless , 2\textgreater , \&\&, \textbar \textbar , ;. \newline  Aceast\IeC {\u a} cerin\IeC {\textcommabelow t}\IeC {\u a} induce la crearea unui server iterativ. Metoda abordat\IeC {\u a} \IeC {\^\i }n acest proiect este urm\IeC {\u a}toarea: rezervarea a c\IeC {\^a}te un proces pentru fiecare utilizator. }{2}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Tehnologii utilizate}{3}}
\@writefile{toc}{\contentsline {paragraph}{ Pentru realizarea acestui proiect au fost utilizate protocolul TCP/IP pentru stabilirea conexiunii \IeC {\^\i }ntre client \IeC {\textcommabelow s}i server. }{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}TCP/IP}{3}}
\@writefile{toc}{\contentsline {paragraph}{ Modelul TCP/IP este cel mai utilizat model pentru comunicarea dintre calculatoare. Denumirea sa provine de la cele dou\IeC {\u a} protocoale fundamentale utilizate: TCP (Transmission Control Protocol) \IeC {\c s}i IP (Internet Protocol). }{3}}
\@writefile{toc}{\contentsline {paragraph}{ Protocolul TCP este un protocol orientat-conexiune sigur ce permite transmiterea unui flux de octe\IeC {\textcommabelow t}i de la o ma\IeC {\textcommabelow s}ina la alta fara erori, astfel vor exista pierderi de informa\IeC {\textcommabelow t}ie. Pentru fiecare pachet IP trimis, se a\IeC {\textcommabelow s}teapt\IeC {\u a} o confirmare c\IeC {\u a} pachetul a fost trimis. Dac\IeC {\u a} dupa un anumit interval de timp acest r\IeC {\u a}spuns nu apare, atunci pachetul va fi retrimis. }{3}}
\@writefile{toc}{\contentsline {paragraph}{ Deasemenea, la recep\IeC {\c t}ionare se verific\IeC {\u a} integritatea datelor, \IeC {\^\i }n cazul \IeC {\^\i }n care datele au fost afectate se cere retransmiterea mesajului. Unele pachete pot ajunge \IeC {\^\i }naintea altora \IeC {\textcommabelow s}i pot avea alte topologii de a-\IeC {\textcommabelow s}i face drum la destina\IeC {\textcommabelow t}ie. }{3}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Arhitectura Aplicatiei}{5}}
\@writefile{toc}{\contentsline {paragraph}{ Proiectul este \IeC {\^\i }mp\IeC {\u a}r\IeC {\textcommabelow t}it \IeC {\^\i }n doua aplica\IeC {\textcommabelow t}ii ce pot fi configurate independet. De pilda, se pot modifica proturile pe care se realizeaz\IeC {\u a} comunicarea \IeC {\^\i }ntre server si clien\IeC {\textcommabelow t}i. De men\IeC {\textcommabelow t}ionat este c\IeC {\u a} num\IeC {\u a}rul de utilizatori pe care \IeC {\^\i }\IeC {\^\i } poate sus\IeC {\textcommabelow t}ine aplica\IeC {\textcommabelow t}ia server depinde de capacitatea ma\IeC {\textcommabelow s}inii. De asemenea, numarul maxim de utilizatori din fi\IeC {\textcommabelow s}ierul de utilizatori este de 64, \IeC {\textcommabelow s}i el modificabil. }{5}}
\@writefile{toc}{\contentsline {paragraph}{ Odata ce serverul va porni, se va alfa intr-o stare blocant\IeC {\u a} p\IeC {\^a}n\IeC {\u a} la stabilirea conexiunii cu un client. Aceast\IeC {\u a} conexiune se realizeaz\IeC {\u a} \IeC {\^\i }ntr-un proces copil. Dup\IeC {\u a} care procesul r\IeC {\u a}d\IeC {\u a}cina va reintra iar in aceea\IeC {\textcommabelow s}i stare. Transferul de date se face cu o cheie de criptare privat\IeC {\u a}. Dac\IeC {\u a} comanda introdus\IeC {\u a} de client este diferit\IeC {\u a}, va fi tratat\IeC {\u a} \IeC {\^\i }ntr-un mod diferit. Pentru manevrarea mai u\IeC {\textcommabelow s}oar\IeC {\u a} a comenzilor primite de c\IeC {\u a}tre clien\IeC {\textcommabelow t}i, odat\IeC {\u a} ce au drepturi, ele sunt sparte \IeC {\^\i }n cuvinte, utilizate ulterior. Un utilizator are la dispozi\IeC {\textcommabelow t}ie 3 gre\IeC {\textcommabelow s}eli de autentificare. Dac\IeC {\u a} datele introduse sunt gre\IeC {\textcommabelow s}ite, la a 3-a incercare nereu\IeC {\textcommabelow s}it\IeC {\u a} se va \IeC {\^\i }ncheia legatura dintre server \IeC {\textcommabelow s}i client. }{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}Client}{5}}
\@writefile{toc}{\contentsline {paragraph}{ Prima parte a acestui proiect este aplica\IeC {\textcommabelow t}ia Client. Aceasta \IeC {\^\i }i va permite utilizatorului s\IeC {\u a} se conecteze la server printr-un IP si un port, inserate de c\IeC {\u a}tre utilizator. Utilizatorul se va afla in 3 etape de-a lungul utiliz\IeC {\u a}rii aplica\IeC {\textcommabelow t}iei Client din perspectiva aplica\IeC {\textcommabelow t}iei Server. }{5}}
\@writefile{toc}{\contentsline {paragraph}{Pasul I - Introducerea username-ului. Dac\IeC {\u a} va fi g\IeC {\u a}sit se va trece la pasul II, daca nu, se repet\IeC {\u a} pasul I;}{5}}
\@writefile{toc}{\contentsline {paragraph}{Pasul II - Introducerea parolei username-ului. Daca parola introdus\IeC {\u a} coincide cu cea a username-ului atunci se va trece la pasul III, daca nu, se repet\IeC {\u a} pasul II;}{5}}
\@writefile{toc}{\contentsline {paragraph}{Pasul III - Clientul poate utiliza toate func\IeC {\textcommabelow t}iile pe care i le pune la dispozi\IeC {\textcommabelow t}ie serverul;}{5}}
\@writefile{toc}{\contentsline {paragraph}{ Printre caracteristicile aplica\IeC {\textcommabelow t}iei Client se numar\IeC {\u a}: }{5}}
\@writefile{toc}{\contentsline {paragraph}{ O list\IeC {\u a} a ac\IeC {\textcommabelow t}iunilor ce pot fi executate de c\IeC {\u a}tre utilizator in cadrul serverului u o scurt\IeC {\u a} descriere, este reprezentat\IeC {\u a} \IeC {\^\i }n tabelul de mai jos }{5}}
\@writefile{toc}{\contentsline {paragraph}{Serverul accept\IeC {\u a} \IeC {\textcommabelow s}i comenzi \IeC {\^\i }nl\IeC {\u a}n\IeC {\textcommabelow t}uite: ls -a \textgreater intro.txt}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}Server}{6}}
\@writefile{toc}{\contentsline {paragraph}{ A doua parte a acestui proiect const\IeC {\u a} \IeC {\^\i }n aplica\IeC {\textcommabelow t}ia Server, care se va afla pe calculatorul ce se dore\IeC {\textcommabelow s}te a fi utilizat drept gazd\IeC {\u a} pentru Clien\IeC {\textcommabelow t}i. C\IeC {\^a}teva din func\IeC {\textcommabelow t}iile pe care le dispune aceast\IeC {\u a} aplica\IeC {\textcommabelow t}ie: }{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3}Stabilirea Conexiunii}{6}}
\@writefile{toc}{\contentsline {paragraph}{ \IeC {\^I}n continuare vom trage o ochiad\IeC {\u a} asupra conexiunii ce urmeaz\IeC {\u a} s\IeC {\u a} se stabileasc\IeC {\u a} \IeC {\^\i }ntre calculatorul nostru - \textit  {Clientul} - \IeC {\textcommabelow s}i calculatorul gazd\IeC {\u a}, cu care dorim s\IeC {\u a} comunic\IeC {\u a}m - \textit  {Serverul}. }{6}}
\@writefile{toc}{\contentsline {paragraph}{ \IeC {\^I}n momentul \IeC {\^\i }n care s-a realizat conexiunea clientul este pus in pasul I. Conexiunea se va face printr-un port prestabilit pe portul 6636, iar daca se dore\IeC {\textcommabelow s}te se poate face \IeC {\textcommabelow s}i pe alt port. }{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4}Procesarea Comenzilor}{7}}
\@writefile{toc}{\contentsline {paragraph}{ Procesarea comenzilor se va realiza at\IeC {\^a}t de partea aplica\IeC {\textcommabelow t}ia client c\IeC {\^a}t \IeC {\textcommabelow s}i de aplica\IeC {\textcommabelow t}ia server, ambele p\IeC {\u a}r\IeC {\textcommabelow t}i efectu\IeC {\^a}nd ac\IeC {\textcommabelow t}iunile aferente comenzii ini\IeC {\textcommabelow t}iate. Unele comenzi trebuiesc tratate \IeC {\^\i }n mai multe runde. De exemplu dac\IeC {\u a} se dore\IeC {\textcommabelow s}te editarea unui fi\IeC {\textcommabelow s}ier acesta va fi salvat local, editat local \IeC {\textcommabelow s}i \IeC {\^\i }nc\IeC {\u a}rcat inapoi in calculatorul gazd\IeC {\u a}. Altele vor fi tratate intr-o singura rund\IeC {\u a}. De exemplu afi\IeC {\textcommabelow s}area fi\IeC {\textcommabelow s}ierelor din directorul curent. Fiecare utilizator va fi stocat in server cu informa\IeC {\textcommabelow t}iile acestuia. }{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.5}Securitate}{8}}
\@writefile{toc}{\contentsline {paragraph}{ Orice transfer de date \IeC {\^\i }ntre server si client se face protejat. Pentru c\IeC {\u a} se bazeaz\IeC {\u a} pe clien\IeC {\textcommabelow t}i, exist\IeC {\u a} vulnerabilitate. Un exemplu ar fi un SMBbomb, unde serverul va primi nenum\IeC {\u a}rate conexiuni p\IeC {\^a}n\IeC {\u a} nu mai face fa\IeC {\textcommabelow t}\IeC {\u a}. \\Unele din atacurile pe care le poate suferi serverul: }{8}}
\@writefile{toc}{\contentsline {paragraph}{ O metod\IeC {\u a} bonus pentru a securiza transferul de date ar fi: }{8}}
\@writefile{toc}{\contentsline {section}{\numberline {5}Server-core}{8}}
\@writefile{toc}{\contentsline {paragraph}{Serverul va primi de la client o comand\IeC {\u a} \IeC {\textcommabelow s}i serverul trebuie sa interpreteze comanda \IeC {\textcommabelow s}i s\IeC {\u a} \IeC {\^\i }i returneze ce va afi\IeC {\textcommabelow s}a execu\IeC {\textcommabelow t}ia. Pentru acest lucru se va crea un nou proces copil. Se va duplifica afi\IeC {\textcommabelow s}area execu\IeC {\textcommabelow t}iei \IeC {\^\i }ntr-un buffer trimis mai apoi la client.\\ }{8}}
\@writefile{toc}{\contentsline {section}{\numberline {6}Concluzii}{9}}
\@writefile{toc}{\contentsline {paragraph}{ Acest proiect va dispune un set de aplica\IeC {\textcommabelow t}ii (client/server) de comunicare a mai multor clien\IeC {\textcommabelow t}i cu un server. Aceasta solu\IeC {\textcommabelow t}ie poate fi \IeC {\^\i }nbun\IeC {\u a}t\IeC {\u a}\IeC {\textcommabelow t}it\IeC {\u a} printr-un algoritm de criptare de genul RSA, SSL \IeC {\textcommabelow s}i o interfat\IeC {\u a} grafic\IeC {\u a} prietenoas\IeC {\u a}. }{9}}
\@writefile{toc}{\contentsline {section}{\numberline {7}Bibliografie}{10}}
